// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: src/main/resources/protos/packet.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package top.focess.netdesign.proto;

@kotlin.jvm.JvmName("-initializerawMessage")
public inline fun rawMessage(block: top.focess.netdesign.proto.RawMessageKt.Dsl.() -> kotlin.Unit): top.focess.netdesign.proto.PacketOuterClass.RawMessage =
  top.focess.netdesign.proto.RawMessageKt.Dsl._create(top.focess.netdesign.proto.PacketOuterClass.RawMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `netdesign2.RawMessage`
 */
public object RawMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: top.focess.netdesign.proto.PacketOuterClass.RawMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: top.focess.netdesign.proto.PacketOuterClass.RawMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): top.focess.netdesign.proto.PacketOuterClass.RawMessage = _builder.build()

    /**
     * `int32 from = 1;`
     */
    public var from: kotlin.Int
      @JvmName("getFrom")
      get() = _builder.getFrom()
      @JvmName("setFrom")
      set(value) {
        _builder.setFrom(value)
      }
    /**
     * `int32 from = 1;`
     */
    public fun clearFrom() {
      _builder.clearFrom()
    }

    /**
     * `int32 to = 2;`
     */
    public var to: kotlin.Int
      @JvmName("getTo")
      get() = _builder.getTo()
      @JvmName("setTo")
      set(value) {
        _builder.setTo(value)
      }
    /**
     * `int32 to = 2;`
     */
    public fun clearTo() {
      _builder.clearTo()
    }

    /**
     * `.netdesign2.MessageType type = 3;`
     */
    public var type: top.focess.netdesign.proto.PacketOuterClass.MessageType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * `.netdesign2.MessageType type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * if type is file or image, the content is id and should be generated by server
     * ```
     *
     * `string content = 4;`
     */
    public var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * ```
     * if type is file or image, the content is id and should be generated by server
     * ```
     *
     * `string content = 4;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun top.focess.netdesign.proto.PacketOuterClass.RawMessage.copy(block: `top.focess.netdesign.proto`.RawMessageKt.Dsl.() -> kotlin.Unit): top.focess.netdesign.proto.PacketOuterClass.RawMessage =
  `top.focess.netdesign.proto`.RawMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

