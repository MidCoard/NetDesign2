// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: src/main/resources/protos/packet.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package top.focess.netdesign.proto;

@kotlin.jvm.JvmName("-initializemessage")
public inline fun message(block: top.focess.netdesign.proto.MessageKt.Dsl.() -> kotlin.Unit): top.focess.netdesign.proto.PacketOuterClass.Message =
  top.focess.netdesign.proto.MessageKt.Dsl._create(top.focess.netdesign.proto.PacketOuterClass.Message.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `netdesign2.Message`
 */
public object MessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: top.focess.netdesign.proto.PacketOuterClass.Message.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: top.focess.netdesign.proto.PacketOuterClass.Message.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): top.focess.netdesign.proto.PacketOuterClass.Message = _builder.build()

    /**
     * `.netdesign2.RawMessage message = 1;`
     */
    public var message: top.focess.netdesign.proto.PacketOuterClass.RawMessage
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `.netdesign2.RawMessage message = 1;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * `.netdesign2.RawMessage message = 1;`
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }

    /**
     * ```
     * start from 0 or 1
     * ```
     *
     * `int32 id = 2;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * start from 0 or 1
     * ```
     *
     * `int32 id = 2;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `int32 timestamp = 3;`
     */
    public var timestamp: kotlin.Int
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * `int32 timestamp = 3;`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * ```
     * start from 1
     * ```
     *
     * `int32 internalId = 4;`
     */
    public var internalId: kotlin.Int
      @JvmName("getInternalId")
      get() = _builder.getInternalId()
      @JvmName("setInternalId")
      set(value) {
        _builder.setInternalId(value)
      }
    /**
     * ```
     * start from 1
     * ```
     *
     * `int32 internalId = 4;`
     */
    public fun clearInternalId() {
      _builder.clearInternalId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun top.focess.netdesign.proto.PacketOuterClass.Message.copy(block: `top.focess.netdesign.proto`.MessageKt.Dsl.() -> kotlin.Unit): top.focess.netdesign.proto.PacketOuterClass.Message =
  `top.focess.netdesign.proto`.MessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val top.focess.netdesign.proto.PacketOuterClass.MessageOrBuilder.messageOrNull: top.focess.netdesign.proto.PacketOuterClass.RawMessage?
  get() = if (hasMessage()) getMessage() else null

