syntax = "proto3";
package netdesign2;
option java_package = "top.focess.netdesign.proto";
option optimize_for = LITE_RUNTIME;

import "google/protobuf/any.proto";

message Packet {
  int32 packetId = 1;
  google.protobuf.Any content = 2;
}

//packet id = 0 client packet
message ServerStatusRequest {
}

//packet id = 1 server packet
message ServerStatusResponse {
  bool online = 1;
  bool registrable = 2;
}

//packet id = 6 client packet
message ServerStatusUpdateRequest {
}

//packet id = 7 server packet
message ServerStatusUpdateResponse {
  bool online = 1;
  bool registrable = 2;
}

//packet id = 2 client packet
message LoginPreRequest {
  string username = 1;
}

//packet id = 3 server packet
message LoginPreResponse {
  string challenge = 1;
}

//packet id = 4 client packet
message LoginRequest{
  string username = 1;
  string hashPassword = 2;
}

//packet id = 5 server packet
message LoginResponse {
  bool logined = 1;
  int32 id = 2;
  string token = 3;
}

message Contact {
  int32 id = 1;
  string name = 2;
  bool online = 3;
  ContactType type = 4;
  repeated Contact members = 5; // optional, only if type is GROUP
  optional int32 header = 6;

  enum ContactType {
    FRIEND = 0;
    GROUP = 1;
    MEMBER = 2;
  }
}

//packet id = 8 server packet0 return ClientAckResponse
message ContactListRequest {
  // contacts should contain the user contact itself as a Friend
  repeated Contact contacts = 1;
  repeated int32 internalIds = 2;
}

//packet id = 9 client packet0
message ClientAckResponse {
}

//packet id = 10 server packet0 return ClientAckResponse
message ContactRequest {
  Contact contact = 1;
  bool delete = 2;
}

//packet id = 11 server packet, packet0
message ServerAckResponse {
}

message File {
  string name = 1;
  bytes content = 2;
}

enum MessageType {
  TEXT = 0;
  IMAGE = 1;
  FILE = 2;
}

message RawMessage {
  int32 from = 1;
  int32 to = 2;
  MessageType type = 3;
  string content = 4;
  optional string hash = 5;
}

message Message {
  RawMessage message = 1;
  int32 id = 2; // start from 0 or 1
  int32 timestamp = 3;
  int32 internalId = 4; // start from 1
}

//packet id = 12 client packet
message ContactMessageRequest {
  string token = 1;
  int32 id = 2;
  int32 internalId = 3;
}

//packet id = 13 server packet
message ContactMessageResponse {
  Message message = 1;
}

//packet id = 14 client packet
message FriendSendMessageRequest {
  string token = 1;
  RawMessage message = 2;
}

//packet id = 15 server packet
message FriendSendMessageResponse {
  // server do not need to send ContactMessageListRequest, this response has made the same effect to the ContactMessageListRequest
  Message message = 1; // fail if message.id == -1
}

//packet id = 16 client packet0 return ServerAckResponse
message SetupChannelRequest {
  string token = 1;
}

//packet id = 17 server packet0 return ClientAckResponse
message ChannelHeartRequest {
}

//packet id = 18 server packet0 return ClientAckResponse
message ContactMessageListRequest {
  repeated Message messages = 1;
}

//packet id = 19 client packet
message FileUploadRequest {
  string token = 1;
  string id = 2;
  File file = 3;
}

//packet id = 24 server packet
message FileUploadResponse {
  bool success = 1;
}

//packet id = 20 client packet
message FileDownloadRequest {
  string token = 1;
  string id = 2;
}

//packet id = 21 server packet
message FileDownloadResponse {
  File file = 1;
}

//packet id = 22 client packet
message RegisterRequest {
  string username = 1;
  string rawPassword = 2;
}

//packet id = 23 server packet
message RegisterResponse {
  bool success = 1;
}